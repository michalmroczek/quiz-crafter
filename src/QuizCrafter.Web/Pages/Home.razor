@page "/"
@using Microsoft.Extensions.Localization
@using QuizCrafter.Shared.Contracts.Quizzes.Contracts
@* @inject HttpClient httpClient *@
@inject NavigationManager NavigationManager
@inject IStringLocalizer<Home> Localizer
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpClientFactory _httpClientFactory

@* @inject LazyCultureProvider LazyCultureProvider *@
<MudGrid Spacing="4" Justify="Justify.Center">
    <AuthorizeView>
        <Authorized>
            <MudText Typo="Typo.h2">Welcome, click here to navigate to your profile </MudText><MudButton OnClick="NavigateToMyQuizes"
                                                                                                         Variant="Variant.Outlined"
                                                                                                         EndIcon="@Icons.Material.Filled.ManageAccounts"
                                                                                                         Color="Color.Tertiary">
                My account
            </MudButton>
        </Authorized>
        <NotAuthorized>
                <MudText Typo="Typo.h2">You are not authorized. Please log in to be able to create and view quizes</MudText>
        </NotAuthorized>
    </AuthorizeView> 
    </MudGrid>
@code {
    private void NavigateToMyQuizes()
    {
        NavigationManager.NavigateTo("/me/quizes");
    }

    protected override async Task OnInitializedAsync()
    {
        using var httpClient = _httpClientFactory.CreateClient("QuizCrafter.API"); 
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        var isUserAuthenticated = user.Identity.IsAuthenticated;
        if (isUserAuthenticated)
        {
            var response = await httpClient.GetFromJsonAsync<GetMyQuizzesContract>($"{httpClient.BaseAddress}/me/quizzes");
        }

    }

}
